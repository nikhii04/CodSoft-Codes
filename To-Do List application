import json
import os

def load_todo_list():
    if os.path.exists("todo_list.json"):         #file code is mentioned below
        with open("todo_list.json", "r") as file:
            return json.load(file)
    else:
        return {"tasks": []}

def save_todo_list(todo_list):
    with open("todo_list.json", "w") as file:
        json.dump(todo_list, file)

def display_todo_list(todo_list):
    if not todo_list["tasks"]:
        print("Your to-do list is empty!")
    else:
        print("Your To-Do List:")
        for index, task in enumerate(todo_list["tasks"], start=1):
            print(f"{index}. {task}")

def add_task(todo_list, new_task):
    todo_list["tasks"].append(new_task)
    save_todo_list(todo_list)
    print(f"Task '{new_task}' added to your to-do list.")

def update_task(todo_list, task_index, updated_task):
    if 1 <= task_index <= len(todo_list["tasks"]):
        todo_list["tasks"][task_index - 1] = updated_task
        save_todo_list(todo_list)
        print(f"Task {task_index} updated successfully.")
    else:
        print("Invalid task index.")

def main():
    todo_list = load_todo_list()

    while True:
        print("\nOptions:")
        print("1. Display To-Do List")
        print("2. Add Task")
        print("3. Update Task")
        print("4. Exit")

        choice = input("Enter your choice (1-4): ")

        if choice == "1":
            display_todo_list(todo_list)
        elif choice == "2":
            new_task = input("Enter the task to add: ")
            add_task(todo_list, new_task)
        elif choice == "3":
            display_todo_list(todo_list)
            task_index = int(input("Enter the task index to update: "))
            updated_task = input("Enter the updated task: ")
            update_task(todo_list, task_index, updated_task)
        elif choice == "4":
            print("Exiting the to-do list application. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 4.")

if __name__ == "__main__":
    main()




#json file is needed for the above to-do applicaion
{"tasks": ["work"]}
